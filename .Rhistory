?remove_missing
runApp()
?selectizeInput
runApp()
runApp()
runApp()
input$city
input$`city-selectized`
d_clean %>% filter(city == input$city) %>% remove_missing() %>%
leaflet() %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(lat = d_map$begin_trip_lat, lng = d_map$begin_trip_lng,
radius = 2, color = "blue", popup = paste("<b>Start Address:</b>\n",
d_map$begin_trip_address)) %>% addCircleMarkers(lat = d_map$dropoff_lat,
lng = d_map$dropoff_lng, radius = 2, color = "red",
popup = paste("<b>Drop off Address:</b>\n", d_map$dropoff_address)) %>%
addPolylines(lat = c(d_map$begin_trip_lat, d_map$dropoff_lat),
lng = c(d_map$begin_trip_lng, d_map$dropoff_lng),
weight = 0.5, color = "black")
d_clean %>% filter(city == input$city)
runApp()
d_clean %>% filter(year == 2019)
d_clean %>% count(year)
runApp()
?selectizeInput
runApp()
d_clean %>% filter(year == 2015)
d_clean %>% filter(year == 2015) %>% slice(1) %>% gather(var, n)
d_clean %>% filter(year == 2015) %>% slice(1) %>% gather(var, n) %>% View()
runApp()
runApp()
runApp()
tags$style()
runApp()
tags$head(tags$style('.selectize-dropdown {z-index: 10000}'))
tags$head(tags$style('.selectize-dropdown {z-index: 10000}'))
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
tags$head(tags$style('.selectize-dropdown {z-index: 10000}')),
selectInput("select", "Select", choices = c("A", "B")),
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
tags$head(tags$style('.selectize-dropdown {z-index: 10000}')),
selectInput("select", "Select", choices = c("A", "B")),
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
library(shinycssloaders)
install.packages("shinycssloaders")
install.packages("shinycssloaders")
runApp()
runApp()
runApp()
runApp()
install.packages("ubeR")
devtools::install_github("DataWookie/ubeR")
UBER_CLIENTID <- "1tTvcKGP-IcbLHjP39jcqLQSzgx_BEgd"
UBER_CLIENTSECRET <- "ApZQf4Hi1QNi-AmbQo_Wi8gCfWciEOGgO8M0NGKv"
uber_oauth(UBER_CLIENTID, UBER_CLIENTSECRET)
library(ubeR)
uber_oauth(UBER_CLIENTID, UBER_CLIENTSECRET)
?uber_oauth
uber_oauth(UBER_CLIENTID, UBER_CLIENTSECRET)
uber_oauth
httr::GET("https://api.uber.com/v1.2/history")
headers(httr::GET("https://api.uber.com/v1.2/history"))
httr::headers(httr::GET("https://api.uber.com/v1.2/history"))
?httr::GET
?authenticate
?GET
library(httr)
?GET
GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = "Bearer JA.VUNmGAAAAAAAEgASAAAABwAIAAwAAAAAAAAAEgAAAAAAAAG8AAAAFAAAAAAADgAQAAQAAAAIAAwAAAAOAAAAkAAAABwAAAAEAAAAEAAAAI-CpYk_CGL3Oa4Kom_slsRsAAAAhusDV1Sfp7f4qmSGt0aISlF-mg8B13CcvSXOEA3k3C7akUkuGUxW-jrWDr79N4NNNhFAD8bl0M6OlP4ge4jDpO2V2aovCPNKmwImC3wrP-v-Vh1RPHf8u-e13S_tkhcDoPpm5JSM-wFkYqRJDAAAAMYKJzIEDVqGTvaqciQAAABiMGQ4NTgwMy0zOGEwLTQyYjMtODA2ZS03YTRjZjhlMTk2ZWU",
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
)
)
r <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = "Bearer JA.VUNmGAAAAAAAEgASAAAABwAIAAwAAAAAAAAAEgAAAAAAAAG8AAAAFAAAAAAADgAQAAQAAAAIAAwAAAAOAAAAkAAAABwAAAAEAAAAEAAAAI-CpYk_CGL3Oa4Kom_slsRsAAAAhusDV1Sfp7f4qmSGt0aISlF-mg8B13CcvSXOEA3k3C7akUkuGUxW-jrWDr79N4NNNhFAD8bl0M6OlP4ge4jDpO2V2aovCPNKmwImC3wrP-v-Vh1RPHf8u-e13S_tkhcDoPpm5JSM-wFkYqRJDAAAAMYKJzIEDVqGTvaqciQAAABiMGQ4NTgwMy0zOGEwLTQyYjMtODA2ZS03YTRjZjhlMTk2ZWU",
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
)
)
content(r, type = "text")
content(r, type = "text") %>%
jsonlite::fromJSON()
library(tidyverse)
content(r, type = "text") %>%
jsonlite::fromJSON()
UBER_AUTH_KEU <- read_file(file = ".credentials/uber-app") %>%
str_replace("\n", "")
UBER_AUTH_KEY <- read_file(file = ".credentials/uber-app") %>%
str_replace("\n", "")
r <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
)
)
content(r, type = "text") %>%
jsonlite::fromJSON()
r <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"limit" = 50,
"Content-Type" = "application/json"
)
)
content(r, type = "text") %>%
jsonlite::fromJSON()
r <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
),
query = list(limit = 50)
)
content(r, type = "text") %>%
jsonlite::fromJSON()
content(r, type = "text") %>%
jsonlite::fromJSON() %>%
extract("history")
content(r, type = "text") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history")
content(r, type = "text") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as_data_frame()
d_uber <- content(r, type = "text") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history")
View(d_uber)
d_uber <- content(r, type = "text") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
unlist()
d_uber <- content(r, type = "text") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame()
d_uber <- content(r, type = "text") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
tbl_df()
d_uber <- content(r, type = "text") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
tbl_df()
d_uber <- content(r, type = "text") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame()
d_uber
d_uber %>% as_data_frame()
d_uber %>% glimpse()
d_uber %>% glimpse()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
flatten() %>%
as.data.frame()
d_uber %>% glimpse()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
flatten() %>%
tbl_df()
content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
flatten()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
flatten() %>%
as_data_frame()
content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
flatten()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as_data_frame() %>%
flatten() %>%
tbl_df()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as_data_frame() %>%
flatten()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
flatten()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
flatten()
View(d_uber)
View(d_uber)
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
jsonlite::flatten()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten()
r <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
),
query = list(limit = 50, offset = 50)
)
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten()
r <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
),
query = list(limit = 50, offset = 20)
)
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten()
r <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
),
query = list(limit = 50)
)
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten()
d_uber %>% glimpse()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df()
d_uber %>% glimpse()
d_uber %>% View()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(start_time = as.POSIXct(history.start_time, from = "1970-01-01"))
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(start_time = as.POSIXct(history.start_time, origin = "1970-01-01"))
d_uber %>% View()
d_uber %>% glimpse()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(
start_time = as.POSIXct(history.start_time, origin = "1970-01-01"),
end_time = as.POSIXct(history.end_time, origin = "1970-01-01"),
request_time = as.POSIXct(history.request_time, origin = "1970-01-01")
)
d_uber
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(
start_time = as.POSIXct(history.start_time, origin = "1970-01-01"),
end_time = as.POSIXct(history.end_time, origin = "1970-01-01"),
request_time = as.POSIXct(history.request_time, origin = "1970-01-01")
) %>%
select(-history.start_time, -history.end_time, -history.request_time)
d_uber
d_uber %>% glimpse()
d_uber <- content(r, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(
start_time = as.POSIXct(history.start_time, origin = "1970-01-01"),
end_time = as.POSIXct(history.end_time, origin = "1970-01-01"),
request_time = as.POSIXct(history.request_time, origin = "1970-01-01")
) %>%
select(-history.start_time, -history.end_time, -history.request_time, -history.product_id)
d_uber %>% glimpse()
# Clean requested data
d_uber <- content(r_trips, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(
start_time = as.POSIXct(history.start_time, origin = "1970-01-01"),
end_time = as.POSIXct(history.end_time, origin = "1970-01-01"),
request_time = as.POSIXct(history.request_time, origin = "1970-01-01")
) %>%
select(-history.start_time, -history.end_time, -history.request_time, -history.product_id)
# Send trip request
r_trips <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
),
query = list(limit = 50)
)
# Clean requested data
d_uber <- content(r_trips, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(
start_time = as.POSIXct(history.start_time, origin = "1970-01-01"),
end_time = as.POSIXct(history.end_time, origin = "1970-01-01"),
request_time = as.POSIXct(history.request_time, origin = "1970-01-01")
) %>%
select(-history.start_time, -history.end_time, -history.request_time, -history.product_id)
d_uber %>%
glimpse()
d_uber %>% slice(1)
d_uber %>% slice(1) %>% pull(history.request_id)
test_id <- d_uber %>% slice(1) %>% pull(history.request_id)
UBER_AUTH_KEY <- read_file(file = ".credentials/uber-app") %>%
str_replace("\n", "")
# Send trip request
r_trips <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
),
query = list(limit = 50)
)
# Clean requested data
d_uber <- content(r_trips, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(
start_time = as.POSIXct(history.start_time, origin = "1970-01-01"),
end_time = as.POSIXct(history.end_time, origin = "1970-01-01"),
request_time = as.POSIXct(history.request_time, origin = "1970-01-01")
) %>%
select(-history.start_time, -history.end_time, -history.request_time, -history.product_id)
test_id <- d_uber %>% slice(1) %>% pull(history.request_id)
sprintf("https://api.uber.com/v1.2/requests/%s", test_id)
r_single_trip <- GET(
url = sprintf("https://api.uber.com/v1.2/requests/%s", test_id),
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
)
)
r_single_trip
content(r, type = "text", encoding = "UTF-8")
content(r_single_trip, type = "text", encoding = "UTF-8")
r_single_trip <- GET(
url = sprintf("https://api.uber.com/v1.2/requests/%s", test_id),
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
)
)
content(r_single_trip, type = "text", encoding = "UTF-8")
UBER_AUTH_KEY <- read_file(file = ".credentials/uber-app") %>%
str_replace("\n", "")
# Send trip request
r_trips <- GET(
url = "https://api.uber.com/v1.2/history",
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
),
query = list(limit = 50)
)
# Clean requested data
d_uber <- content(r_trips, type = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON() %>%
magrittr::extract("history") %>%
as.data.frame() %>%
jsonlite::flatten() %>%
tbl_df() %>%
mutate(
start_time = as.POSIXct(history.start_time, origin = "1970-01-01"),
end_time = as.POSIXct(history.end_time, origin = "1970-01-01"),
request_time = as.POSIXct(history.request_time, origin = "1970-01-01")
) %>%
select(-history.start_time, -history.end_time, -history.request_time, -history.product_id)
test_id <- d_uber %>% slice(1) %>% pull(history.request_id)
r_single_trip <- GET(
url = sprintf("https://api.uber.com/v1.2/requests/%s", test_id),
add_headers(
"Authorization" = sprintf("Bearer %s", UBER_AUTH_KEY),
"Accept-Language" = "en_US",
"Content-Type" = "application/json"
)
)
content(r_single_trip, type = "text", encoding = "UTF-8")
r_single_trip
